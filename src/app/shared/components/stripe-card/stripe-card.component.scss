$circle-length: 300px;
$check-length: 35px;

label {
  color: var(--black-color);
  display: block;
  font-weight: 800;
  margin-bottom: 0.5em;
}

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="tel"],
input[type="range"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="color"],
textarea {
  color: var(--lightblack-color);
  background: var(--light-color);
  background-image: -webkit-linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0));
  border: 1px solid rgba(0,0,0,.1);
  border-radius: 3px;
  font-size: 0.875rem;
  display: block;
  padding: 0.7em;
  width: 100%;
}

button,
input[type="button"],
input[type="submit"] {
  background-color: var(--black-color);
  border: 0;
  -webkit-border-radius: 2px;
  border-radius: 2px;
  -webkit-box-shadow: none;
  box-shadow: none;
  color: var(--light-color);
  cursor: pointer;
  display: inline-block;
  font-size: 0.875rem;
  font-weight: 800;
  line-height: 1;
  padding: 1em 2em;
  text-shadow: none;
  -webkit-transition: background 0.2s;
  transition: background 0.2s;
}

/**
 * The CSS shown here will not be introduced in the Quickstart guide, but shows
 * how you can use CSS to style your Element's container.
 */
 .StripeElement {
    box-sizing: border-box;
  
    height: 40px;
  
    padding: 10px 12px;
  
    border: 1px solid transparent;
    border-radius: 4px;
    background-color: white;
  
    box-shadow: 0 1px 3px 0 #e6ebf1;
    -webkit-transition: box-shadow 150ms ease;
    transition: box-shadow 150ms ease;
  }
  
  .StripeElement--focus {
    box-shadow: 0 1px 3px 0 #cfd7df;
  }
  
  .StripeElement--invalid {
    border-color: #fa755a;
  }
  
  .StripeElement--webkit-autofill {
    background-color: #fefde5 !important;
  }

.card_form {
  max-width: 30rem;
  padding: .5rem;
  --main-color: rgb(255, 90, 95);
  --black-color: #222;
  --lightblack-color: #748AA4;
  --light-color: #fefefe;
  --blue-color: #008CE4;
  --darklight-color: rgb(245, 245, 245);
  --red-color: #8C0000;
  --lightred-color: rgb(255, 215, 215);
  --whitered-color: rgba(255, 245, 245, .4);
  --white-color: rgb(255, 255, 255);
  --success-color: rgb(110, 255, 110);
  background-color: var(--darklight-color);
  position: relative;
  button {
    display: block;
    margin: auto;
  }
}

.form-fieldset {
  border: none;
}

.form-field {
  position: relative;
  margin: 1rem auto;
  width: 80%;
  input {
    width: 100%;
  }
}

.form-field.is-required:before, .form-field.required:before {
  color: #d5d5d5;
  content: '*';
  display: block;
  font-size: 25px;
  line-height: 25px;
  margin-left: -18px;
  margin-top: -7px;
  position: absolute;
  top: 50%;
  z-index: 1;
}

.loading_placeholder {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255,255,255,.5);
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity .3s ease-in;
  &.is-active {
    opacity: 1;
    pointer-events: all;
  }
}

.success_message {
  display: block;
  text-align: center;
}

.lds-ripple {
  display: inline-block;
  position: relative;
  width: 64px;
  height: 64px;
}
.lds-ripple div {
  position: absolute;
  border: 4px solid #000;
  opacity: 1;
  border-radius: 50%;
  animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;
}
.lds-ripple div:nth-child(2) {
  animation-delay: -0.5s;
}
@keyframes lds-ripple {
  0% {
    top: 28px;
    left: 28px;
    width: 0;
    height: 0;
    opacity: 1;
  }
  100% {
    top: -1px;
    left: -1px;
    width: 58px;
    height: 58px;
    opacity: 0;
  }
}





@keyframes scaleAnimation {
  0% {
    opacity: 0;
    transform: scale(1.5);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes drawCircle {
  0% {
    stroke-dashoffset: $circle-length;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes drawCheck {
  0% {
    stroke-dashoffset: $check-length;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes drawLine {
  from {
    stroke-dashoffset: 100;
  }
  to {
    stroke-dashoffset: 0;
  }
}

.successAnimationCircle,
.failureAnimationCircle {
  stroke-dasharray: $circle-length $circle-length;
  stroke: var(--success-color);
}

.successAnimationCheck,
.failureAnimationCheck {
  stroke-dasharray: $check-length $check-length;
  stroke: var(--success-color);
}

.successAnimation.animated,
.failureAnimation.animated {
  animation: 1s ease-out 0s 1 both scaleAnimation;
  
  .successAnimationCircle,
  .failureAnimationCircle {
    animation: 1s cubic-bezier(0.77, 0, 0.175, 1) 0s 1 both drawCircle;
  }
  
  .successAnimationCheck {
    animation: 1s cubic-bezier(0.77, 0, 0.175, 1) 0s 1 both drawCheck;
  }
  
  .failureAnimationCheckLine {
    stroke-dasharray: 100;
    stroke-dashoffset: 100;
    animation: drawLine 1s cubic-bezier(1, 0.2, 0.1, 1) forwards;
  }
}